HTTP (HyperText Transfer Protocol) — это основной протокол для передачи данных в сети Интернет. Он определяет, как клиент (обычно веб-браузер) 
и сервер обмениваются данными, и служит основой для передачи веб-страниц, API и других ресурсов.
В обмене информацией по HTTP-протоколу принимают участие клиент и сервер. Происходит это по следующей схеме: 
- Клиент запрашивает у сервера некоторый ресурс.(Request)
- Сервер обрабатывает запрос и возвращает клиенту ресурс, который был запрошен.(Response)
Используется на 80 порту.

HTTP-сообщения: запросы и ответы
Данные между клиентом и сервером в рамках работы протокола передаются с помощью HTTP-сообщений. Они бывают двух видов:
- Запросы (HTTP Requests) — сообщения, которые отправляются клиентом на сервер, чтобы вызвать выполнение некоторых действий. Зачастую для получения 
доступа к определенному ресурсу. Основой запроса является HTTP-заголовок.
- Ответы (HTTP Responses) — сообщения, которые сервер отправляет в ответ на клиентский запрос.

Структура HTTP запроса:
1. Стартовая строка(Start line) - указывает метод, URI (адрес ресурса) и версию протокола
2. HTTP-заголовки(HTTP Headers) — несколько строчек текста в определенном формате, которые либо уточняют запрос, либо описывают содержимое тела сообщения.
3. Пустая строка, которая сообщает, что все метаданные для конкретного запроса или ответа были отправлены.
4. Опциональное тело сообщения(body), которое содержит данные, связанные с запросом, либо документ (например HTML-страницу), передаваемый в  ответе.

Стартовая строка
Стартовая строка HTTP-запроса состоит из трех элементов:
1. Метод HTTP-запроса (method, реже используется термин verb). Обычно это короткое слово на английском, которое указывает, что конкретно нужно сделать с 
запрашиваемым ресурсом.
2. Цель запроса. Представлена указателем ресурса URL, который состоит из протокола, доменного имени (или IP-адреса), пути к конкретному ресурсу на 
сервере. Дополнительно может содержать указание порта, несколько параметров HTTP-запроса и еще ряд опциональных элементов.
3. Версия используемого протокола (либо HTTP/1.1, либо HTTP/2), которая определяет структуру следующих за стартовой строкой данных.

Методы
Методы позволяют указать конкретное действие, которое мы хотим, чтобы сервер выполнил, получив наш запрос.
- GET(Позволяет запросить некоторый конкретный ресурс.)
- POST(Позволяет отправить данные на сервер.)
- HEAD(Данный метод при использовании его в запросе позволит получить только заголовки, которые сервер бы вернул при получении GET-запроса к тому же 
ресурсу. Используется для того, чтобы узнать размер запрашиваемого ресурса перед его загрузкой)
- PUT(Используется для создания (размещения) новых ресурсов на сервере. )
- DELETE(Позволяет удалить существующие ресурсы на сервере.)
- OPTIONS(Позволяет запросить информацию о сервере, в том числе информацию о допускаемых к использованию на сервере HTTP-методов.)
- PATCH(Позволяет внести частичные изменения в указанный ресурс по указанному расположению.)

URL
Получение доступа к ресурсам по HTTP-протоколу осуществляется с помощью указателя URL (Uniform Resource Locator). URL представляет собой строку, 
которая позволяет указать запрашиваемый ресурс и еще ряд параметров.
Строение URL:
- Поле схема(Scheme) используется для указания используемого протокола, всегда сопровождается двоеточием и двумя косыми чертами (://).
- Host указывает местоположение ресурса, в нем может быть как доменное имя, так и IP-адрес.
- Port(позволяет указать номер порта, по которому следует обратиться к серверу. Оно начинается с двоеточия (:), за которым следует номер порта.
Если порт не указан, то используется порт по умолчанию)
- Путь(Path)Оно указывает на ресурс, к которому производится обращение.
- Параметры запроса(Query String) начинается со знака вопроса (?), за которым следует пара «параметр-значение», между которыми расположен символ равно (=).
- Якорь(Anchor) Определяет внутреннюю ссылку или точку на странице, к которой нужно перейти.Начинается с символа решетки (#).
Не все компоненты необходимы для доступа к ресурсу. Обязательно следует указать только поля Scheme и Host.

Заголовки(Headers)
HTTP-заголовок представляет собой строку формата «Имя-Заголовок:Значение», с двоеточием(:) в качестве разделителя.
В запросах может передаваться большое число различных заголовков, но все их можно разделить на три категории:
- Общего назначения, которые применяются ко всему сообщению целиком.
- Заголовки запроса уточняют некоторую информацию о запросе, сообщая дополнительный контекст или ограничивая его некоторыми логическими условиями.
- Заголовки представления, которые описывают формат данных сообщения и используемую кодировку. Добавляются к запросу только в тех случаях, когда с ним 
передается некоторое тело.
Самые частые заголовки запроса:
- Host(Используется для указания того, с какого конкретно хоста запрашивается ресурс.)
- User-Agent(Заголовок используется для описания клиента, который запрашивает ресурс. Он содержит достаточно много информации о пользовательском 
окружении.(какой браузер используется в качестве клиента, его версию, а также ОС, на которой работает клиент)
- Refer Используется для указания того, откуда поступил текущий запрос.
- Accept способ клиента указать серверу предпочитаемые форматы данных.
- Cookie Данный заголовок может содержать в себе одну или несколько пар «Куки-Значение» в формате cookie=value.
- Authorization Используется в качестве еще одного метода идентификации клиента на сервере. После успешной идентификации сервер возвращает токен, 
уникальный для каждого конкретного клиента. В отличие от куки, данный токен хранится исключительно на стороне клиента и отправляется клиентом 
только по запросу сервера. 

Тело запроса
Завершающая часть HTTP-запроса — это его тело. Не у каждого HTTP-метода предполагается наличие тела. Так, например, методам вроде GET, HEAD, DELETE,
OPTIONS обычно не требуется тело. Некоторые виды запросов  могут отправлять данные на сервер в теле запроса: самый распространенный из таких методов — POST.

ОТВЕТЫ HTTP
HTTP-ответ является сообщением, которое сервер отправляет клиенту в ответ на его запрос. Его структура равна структуре HTTP-запроса: стартовая строка, заголовки и тело.

Строка статуса (Status line)
Стартовая строка HTTP-ответа называется строкой статуса (status line). На ней располагаются следующие элементы:
1. Уже известная нам по стартовой строке запроса версия протокола (HTTP/2 или HTTP/1.1).
2. Код состояния, который указывает, насколько успешно завершилась обработка запроса.
3. Пояснение — короткое текстовое описание к коду состояния.

Коды состояния и текст статуса
- 1хх Коды из данной категории носят исключительно информативный характер и никак не влияют на обработку запроса.
- 2хх Коды состояния из этой категории возвращаются в случае успешной обработки клиентского запроса.
- 3хх Эта категория содержит коды, которые возвращаются, если серверу нужно перенаправить клиента.
- 4хх Коды данной категории означают, что на стороне клиента был отправлен некорректный запрос. Например, клиент в запросе указал не поддерживаемый
метод или обратился к ресурсу, к которому у него нет доступа.
- 5хх Ответ с кодами из этой категории приходит, если на стороне сервера возникла ошибка.

Самые распространенные:
- 200 ок (Возвращается в случае успешной обработки запроса, при этом тело ответа обычно содержит запрошенный ресурс.)
- 302 Found (Перенаправляет клиента на другой URL. Например, данный код может прийти, если клиент успешно прошел процедуру аутентификации и теперь
может перейти на страницу своей учетной записи.)
- 400 Bad Request (Данный код можно увидеть, если запрос был сформирован с ошибками. Например, в нем отсутствовали символы завершения строки.)
- 403 Forbidden (Означает, что клиент не обладает достаточными правами доступа к запрошенному ресурсу. Также данный код можно встретить, если 
сервер обнаружил вредоносные данные, отправленные клиентом в запросе.)
-404 Not Found (Данный код можно увидеть, если запросить у сервера ресурс, которого не существует на сервере.)
- 500 Internal Error (Данный код возвращается сервером, когда он не может по определенным причинам обработать запрос.)

Заголовки ответа(Response Headers)
Response Headers, или заголовки ответа, используются для того, чтобы уточнить ответ, и никак не влияют на содержимое тела.

Тело ответа
Последней частью ответа является его тело. Несмотря на то, что у большинства ответов тело присутствует, оно не является обязательным.

HTTPs (HyperText Transfer Protocol, secure) является расширением HTTP-протокола, который позволяет шифровать отправляемые данные, перед тем как они 
попадут на транспортный уровень. Данный протокол по умолчанию использует порт 443.

HTTP-запрос — это сообщение, которое клиент (например, веб-браузер или другое приложение) отправляет на сервер для выполнения какого-либо действия, 
такого как получение данных, отправка информации, обновление ресурса или удаление. Запрос содержит информацию о том, что хочет сделать клиент, и 
какие данные или параметры ему нужны.
