Тест-дизайн - это этап процесса тестирования, в ходе которого мы создаем тест-кейсы и намечаем структуру действий, связанных с тестированием проекта.
Основная цель тест-дизайна - структурировать процедуры тестирования, чтобы было легче отслеживать покрытие требований тест-кейсами.
Благодаря тест-дизайну мы:
- создаем тесты, помогающие выявлять серьезные ошибки
- вдумчиво подходим к тестированию и не тратим ресурсы впустую
- сводим к минимуму количество тестов, необходимых для тестирования продукта

Техники тест-дизайна - это стратегии, которые помогают лучше писать тест-кейсы. Их использование поомогает создавать меньше тестов, обеспечивая при 
этом широкий охват требований.
Популярные техники тест-дизайна:
- эквивалентное разделение
- анализ граничных значений
- переход состояний
- попарное тестирование
- предугадывание ошибок

Эквивалентное разделение
Подразумевает разбиение тестовых данных на классы по какому-то признаку. Этот метод имеет смысл только в том случае, если компоненты чем-то похожи 
и могут войти в общую группу.
Если мы выбираем в качестве техники тест-дизайна эквивалентное разделение, это означает, что мы будем тестировать только несколько значений из 
каждого класса элементов.
Эквивалентное разделение — хорошее решение для случаев, когда вы имеете дело с большим объемом входящих данных или множеством одинаковых вариантов ввода.

Анализ граничных значений
Техника граничных значений (Boundary Value Analysis, BVA) — это метод тестирования, основанный на проверке значений, находящихся на границах диапазонов 
допустимых значений. Суть метода заключается в том, что ошибки часто проявляются именно на границах диапазонов, а не внутри них
Эта техника тестирования фокусируется на проверке значений на границах допустимых диапазонов, так как ошибки часто возникают именно в этих точках. 
Тестируются значения, непосредственно находящиеся на границах, и значения чуть выше и чуть ниже этих границ.
Граничные значения — это те места, в которых один класс эквивалентности переходит в другой.
ОПРЕДЕЛИТЬ ШАГ
Запомнить, что для применения техники граничных значений для начала нужно определить шаг на диапазоне наших значений.
Когда приводишь пример применения техники граничных значений - всегда озвучивай или уточняй у собеседующего, какой шаг не диапазоне.




ПРИМЕР ЭКВИВАЛЕНТНОГО
Допустим, есть система, которая принимает возраст пользователя в диапазоне от 18 до 65 лет. Требуется протестировать поле ввода возраста.
1. Анализ требований: возраст от 18 до 65
2. Определение классов эквивалентности:
Валидные классы: от 18 до 65 лет
Невалидные классы: 
- меньше 18 лет
- больше 65 лет
- отрицательные значения
- невалидные типы данных(например текст)
3. Выбор представителя каждого класса:
- Валидные: 18, 33, 56
- Невалидные: 17, 70, -22, "девятнадцать" 
4. Создание тестов:
- Проверяем возраст 18, 33, 56 - система должна принимать.
- Проверяем возраст 17, 70, -22, "девятнадцать" - система должна выдавать ошибку.
