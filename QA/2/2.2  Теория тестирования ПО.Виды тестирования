Тестирование ПО (Software Testing) - проверка соответсвия между реальным и ожидаемым поведением программы.
Чем занимаются в тестировании:
1. Планирование работ(Test Management)
2. Проектированием тестов (Test Design) - этап на котором создаются тестовые сценарии(тест кейсы), в соответствии с определенными ранее критериями. 
определяется КАК будет тестироваться продукт.
3. Выполнение тестирования( Test Execution)
4. Анализом результатов(Test Analysis)

Основные цели тестирования:
- техническая: предоставленияе актуальной информации о состоянии продукта на данный момент.
- коммерческая: повышение лояльности к компании и продукут, т.к любой обнаруженный дефект негативно влияет на доверие пользователей.

Верификация - соответствие продукта требованиям(спецификации)
Валидация - соответствие продукта потребностям пользователей
Дефект (баг) — это несоответствие фактического результата выполнения программы ожидаемому результату.

Error — это ошибка пользователя, то есть он пытается использовать программу иным способом (например, вводит буквы в поля, где требуется вводить цифры).
В качественной программе предусмотрены такие ситуации и выдаются сообщение об ошибке (error message).
Bug (defect) — это ошибка программиста (или дизайнера или ещё кого, кто принимает участие в разработке), то есть когда в программе, 
что-то идёт не так, как планировалось. Например, внутри программа построена так, что изначально не соответствует тому, что от неё ожидается.
Failure — это сбой в работе компонента, всей программы или системы (может быть как аппаратным, так и вызванным дефектом).

Атрибуты дефекта:
- Серьезность(Severity) - характеризует влияние дефекта на работоспособность приложения. Выставляется тестировщиком.
- Приоритет(Priority) - указывает на очередность выполнения задачи или утсранения дефекта.

НЕКОТОРЫЕ ТЕХНИКИ ТЕСТ-ДИЗАЙНА

1. Эквивалентное Разделение(Equivalence Partitioning) - это техника, при которой функционал разделяется на группы эквивалентных по своему влиянию 
на систему значений.
2. Анализ Граничных Значений(Boundary Value Analysis) - это техника проверки поведения продукта на крайних(граничных) значения вводных данных.
3. Доменный анализ (Domain Analysis Testing) - это техника основана на разбиении диапазона воможных значений переменной на поддиапазоны, 
с последующим выбором одного или нескольких значений из каждого домена для тестирования.
4. Предугадывание ошибки (Error Guessing — EG). Это когда тестировщик использует свои знания системы и способность к интерпретации спецификации
на предмет того, чтобы «предугадать» при каких входных условиях система может выдать ошибку.
5. Причина / Следствие (Cause/Effect — CE). Подразумевается ввод условий, для получения ответа от системы (следствие).
6. Сценарий использования (Use Case Testing) — Use Case описывает сценарий взаимодействия двух и более участников (как правило — пользователя и системы).
7. Исчерпывающее тестирование (Exhaustive Testing — ET) — подразумевается проверка всех возможные комбинации входных значений. На практике не используется.
8. Попарное тестирование (Pairwise Testing) — это техника формирования наборов тестовых данных из полного набора входных данных в системе, которая 
позволяет существенно сократить общее количество тест-кейсов. Используется для тестирования, например, фильтров, сортировок.
9. Тестирование на основе состояний и переходов (State-Transition Testing) — применяется для фиксирования требований и описания дизайна приложения.
10. Таблица принятия решений (decision table) — инструмент для упорядочения бизнес-требований, которые должны быть реализованы в продукте. 
Применяется для систем со сложной логикой. 


ОСНОВНЫЕ ВИДЫ ТЕСТИРОВАНИЯ ПО:

Классификация по целям:
- Функциональное тестирование (functional testing) рассматривает заранее указанное поведение и основывается на анализе спецификации компонента или 
системы в целом, т.е. проверяется корректность работы функциональности приложения. (Тестирование банковского приложения(перевод между счетами), тестир функциональности формы регистрации нового пользователя)
- Нефункциональное тестирование (non-functional testing) — тестирование атрибутов компонента или системы, не относящихся к функциональности.
  -- Тестирование пользовательского интерфейса (GUI Testing)
  -- Тестирование удобства использования (Usability Testing)
  -- Тестирование безопасности (security testing)
  -- Инсталляционное тестирование (installation testing)
  -- Конфигурационное тестирование (Configuration Testing)
  -- Тестирование на отказ и восстановление (Failover and Recovery Testing)
  -- Тестирование локализации (localization testing)
  -- Тестирование производительности (performance testing)
     --- Нагрузочное тестирование (load testing)
     --- Тестирование стабильности или надежности (Stability / Reliability Testing)
     --- Стрессовое тестирование (Stress Testing)
     --- Объемное тестирование (Volume Testing)
     --- Тестирование масштабируемости (scalability testing)
Классификация по позитивности сценария:
- Позитивное
- Негативное
Классификация по знанию системы:
- Тестирование белого ящика (White Box)
- Тестирование серого ящика
- Тестирование чёрного ящика (Black Box)
Классификация по исполнителям тестирования:
- Альфа-тестирование
- Бета-тестирование 
Классификация по уровню тестирования:
- Модульное (компонентное) тестирование (Unit Testing)
- Интеграционное тестирование (Integration Testing)
- Системное тестирование (System Testing) 
- Операционное тестирование (Release Testing)
Классификация по исполнению кода:
- Статическое тестирование
- Динамическое тестирование
Классификация по хронологии выполнения:
- Повторное/подтверждающее тестирование (re-testing/confirmation testing)
- Регрессионное тестирование (regression testing) 
- Приёмочное тестирование

ДОКУМЕНТАЦИЯ

Требования — это спецификация (описание) того, что должно быть реализовано.
Требования описывают то, что необходимо реализовать, без детализации технической стороны решения.
Основные атрибуты требований:
- Полнота
- Непротиворечивость
- Недвусмысленность
- Проверяемость(тестопригодность)
- Приоритетность

Тест план (Test Plan) — документ, описывающий весь объем работ по тестированию:
- Что нужно тестировать?
- Как будет проводиться тестирование?
- Когда будет проводиться тестирование?
- Критерии начала тестирования
- Критерии конца тестирования

Неотъемлемой частью тест-плана является Traceability matrix — Матрица соответствия требований (МСТ) — это таблица, содержащая соответствие 
функциональных требований (functional requirements) продукта и подготовленных тестовых сценариев (test cases).
Чек-лист (check list) — это документ, описывающий что должно быть протестировано.
Тестовый сценарий (Test Case) — это документ, в котором содержатся условия, шаги и другие параметры для проверки реализации тестируемой функции
или её части.
Атрибуты тест кейса:
- Предусловия (PreConditions)
- Шаги (Steps)
- Ожидаемый результат (Expected result),\
- иногда используются Постусловия (PostConditions)

Отчёт о дефекте (Bug Report) — это документ, описывающий ситуацию или последовательность действий приведшую к некорректной работе функциональности.



