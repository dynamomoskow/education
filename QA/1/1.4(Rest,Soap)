REST API (Representational State Transfer) – это архитектурный подход, описывающий рамки взаимодействия с API.

API (Application Programming Interface) представляет собой набор определений и протоколов. Разработчики создают API-интерфейсы 
для взаимодействия и обмена данными одного приложения или сайта с другими. API функционирует как своеобразный шлюз или посредник между клиентами и сервером.

GET — это получение информации или доступ к данным ресурса, расположенным на сервере по указанному URL. Такого рода запросы только возвращают данные с сервера, но не могут их изменить или удалить. 
POST — это добавление или замена данных. В бухгалтерском сервере POST /invoices используется для открытия нового счета.
PUT — это обновление существующих на сервере ресурсов. Так, PUT /invoices дает возможность изменить номер счета, сумму или банковские реквизиты.
DELETE — это удаление данных. В бухгалтерском сервере DELETE /invoices удаляет уже оплаченные счета.

Главное назначение REST:
- Высокая производительность.
- Возможность масштабирования.
- Адаптивность и портативность.
- Отказоустойчивость.
- Простая поддержка.

Основные принципы архитектурного стиля REST API:
- реализация с помощью протокола безопасной передачи данных HTTPS, который поддерживает технологию шифрования TLS/SSL;
- применение набора инструментов и правил API Blueprint и Swagger, которые определяют спецификацию для описания REST API;
- тестирование REST API посредством использования приложения Get Postman;
- использование большого перечня HTTP-кодов;
- возможность архивирования масштабных блоков данных.

Основные принципы архитектурного стиля REST API:
1. Отделение клиента от сервера (Client-Server). 
2. Отсутствие состояния (Stateless).
3. Кэшируемость (Cacheable).
4. Единый интерфейс (Uniform Interface).
5. Многоуровневость системы (Layered System).
6. Предоставление кода по запросу (Code on Demand).
7. «Начало от нуля» (Starting with the Null Style).
